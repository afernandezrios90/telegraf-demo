[agent]
  hostname = "telegraf"
  interval = "60s"
  flush_interval = "60s"

[global_tags]
  env = "test"

##################### INPUTS #####################
[[inputs.internal]]
  # Métricas internas de Telegraf
  alias = "internal"
  [inputs.internal.tags]
   input_type = "internal"
   engine = "telegraf"

## Recolección de métricas de algunas URLs
#[[inputs.http_response]]
#  alias = "web_paged"
#  response_timeout = "5s"
#  method = "GET"
#  follow_redirects = true
#  insecure_skip_verify = true
#  urls = [ "https://google.com"
#        ]
#  [inputs.http_response.tags]
#    platform = "internet"
#    source = "telegraf"

[[inputs.http_listener_v2]]
  service_address = ":8080"
  read_timeout = "10s"
  write_timeout = "10s"
  max_body_size = 0
  methods = ["GET", "POST", "PUT"]
  data_format = "influx"
  [inputs.http_listener_v2.tags]
    input_type = "http_listener_v2"

##################### OUTPUTS #####################
# Output: Guardar en fichero con formato InfluxDB
[[outputs.file]]
  files = ["/etc/telegraf/output_metrics_influx.txt"]
  influx_sort_fields = true
  [outputs.file.tagpass]
    input_type = ["http_listener_v2"]

# Output: Guardar en fichero con formato Prometheus
#[[outputs.file]]
#  files = ["/etc/telegraf/output_metrics_prom.txt"]
#  data_format = "prometheus"

# Output: Google Cloud Pub/Sub
#[[outputs.cloud_pubsub]]
#  project = "my-gcp-project"  # Reemplazar con el ID real del proyecto en Google Cloud
#  topic = "telegraf-metrics-topic"  # Reemplazar con el nombre real del tópico de Pub/Sub
#  ## Archivo con credenciales del servicio en GCP (JSON)
#  credentials_file = "/etc/telegraf/gcp-credentials.json"  # Ruta al archivo de credenciales de la cuenta de servicio
#  ## Formato de salida (InfluxDB o JSON)
#  data_format = "influx"
#  ## Filtro: Solo enviar métricas donde el tag "cronos" sea "true"
#  [outputs.cloud_pubsub.tagpass]
#    cronos = ["true"]